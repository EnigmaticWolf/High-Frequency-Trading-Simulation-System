% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hftsimulator.r
\name{ordersubmission}
\alias{ordersubmission}
\title{ordersubmission
 take one of the following order actions, including open, close, closetoday, closepreday and cancel.}
\usage{
ordersubmission(instrumentid = "TF1603", orderid = NULL, direction = 1,
  price = 0, hands = 1, action = "open", timeoutlist = FALSE,
  timeoutchase = FALSE, timeoutsleep = 1, chaselist = FALSE,
  chasesleep = 1)
}
\arguments{
\item{instrumentid}{character, instrument identifier}

\item{orderid}{character, specifying an unique order id, can be generated by randomid()}

\item{direction}{integer, specifying trading direction. 1 for long, -1 for short.}

\item{price}{numeric, specifiying order pirce.NOTE: when price=0, ordersubmission() will submit a market order; when price=NULL, ordersubmission() will take the corresponding bid1 or ask1 price as submitted price.}

\item{hands}{integer, specifying amount to be submitted.}

\item{action}{character, specifying submit action, action can take value from one of "open","close","closetoday","closepreday" and "cancel". amout submitted in action='close' can not be greater than the sum of current holdings and queuing open hands.}

\item{timeoutlist}{logical, specyfing wether to give current order a timeout interval, the length of the interval is specified by timeoutsleep. if the order hasn't been executed after a time interval greater than timeoutsleep, the order will be canceled.}

\item{timeoutsleep}{numeric, specifying the timeout length in seconds.}

\item{chaselist}{logical, specifying wether to put this order to auto-chase list. if the order hasn' been executed for a time inverval longer than chasesleep, the simulator will cancel this order(if needed), then submit a new one with the sampe hands and a price equal to the bid1/ask1 price. the simulator will repeat this action until the original submitted amount is executed.}

\item{chasesleep}{numeric, specifying the time interval between each execution check. In seconds.}
}
\value{
order status
}
\details{
ordersubmission submit an order specified by the user, it also take some additional actions after the submission. For example, if set timeoutlist=TRUE and timeoutsleep=1, the simulator will first submit an order and cancel it if it hasn't been executed in the next second.
}
\seealso{
\link{multisubmission} \link{timeoutchasesubmission} \link{timeoutsubmission} \link{chasesubmission}
}

